package recognize;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.*;

public class AddressResolutionUtil {
	static String num;
    public static List<Map<String,String>> addressResolution(String address){
    	String regex="(?<province>[^省]+自治区|.*?省|.*?行政区)?(?<city>[^市]+自治州|.*?地区|.*?行政单位|.+盟|市辖区|.*?市|.*?县)?(?<county>[^县]+县|.+?区|.+市|.+旗|.+海域|.+岛)?(?<town>[^区]+区|.+镇|.+街道)?(?<village>.*)";
        Matcher m=Pattern.compile(regex).matcher(address);
        String province=null,city=null,county=null,town=null,village=null;
        List<Map<String,String>> table=new ArrayList<Map<String,String>>();
        Map<String,String> row=null;
        while(m.find()){
            row=new LinkedHashMap<String,String>();
            province=m.group("province");
            row.put("province", province==null?"":"\""+province.trim()+"\"");//删除头尾空白字符
            city=m.group("city");
            row.put("city", city==null?"":"\""+city.trim()+"\"");
            county=m.group("county");
            row.put("county", county==null?"":"\""+county.trim()+"\"");
            town=m.group("town");
            row.put("town", town==null?"":"\""+town.trim()+"\"");
            village=m.group("village");
            row.put("village", village==null?"":"\""+village.trim()+"\"");
            //table.add(row);
            System.out.print(row.values());
        }
        return table;
    }
    public static  void checkCellphone(String str){
        // 将给定的正则表达式编译到模式中
    Pattern pattern = Pattern.compile("((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d{8}");
    // 创建匹配给定输入与此模式的匹配器。
    Matcher matcher = pattern.matcher(str);
    //查找字符串中是否有符合的子字符串
    while(matcher.find()){
            //查找到符合的即输出
        num=matcher.group();
    }
}
	public static void main(String[] args) {
		 @SuppressWarnings("resource")
		Scanner reader = new Scanner(System.in);
	        String str = reader.nextLine();
		String [] mes=str.split(",");
		System.out.print("{\"姓名\": \""+mes[0]+"\", ");
        //提取手机号码
        checkCellphone(str);
        System.out.print("\"电话\": \""+num+"\", ");
        //把电话号码从信息中删除
        mes[1]=mes[1].r
